第一天==>
    学习作用域-------------------理解作用域对程序执行的影响 || 局部作用域 | 块作用域 | 函数作用域 | 全局作用域 | 作用域链
    变量提升---------------------变量提升 || 函数提升 || 参数 ||  与undefined
    闭包等语言特征---------------闭包是一种比较特殊和函数，使用闭包能够访问函数作用域中的变量 从代码形式上看闭包是一个做为返回值的函数
    掌握变量赋值-----------------概念
    箭头函数---------------------概念
    剩余参数---------------------概念

第二天==>
    解构赋值---------对象解构 || 数组解构
    面向对象概念-----利用构造函数创建对象 || 字面量 || 自定义构造函数
    实例成员---------通过构造函数创建的对象称为实例对象，实例对象中的属性和方法称为实例成员
    静态成员---------在 JavaScript 中底层函数本质上也是对象类型，因此允许直接为函数动态添加属性或方法，构造函数的属性和方法被称为静态成员
    引用类型---------也叫复杂类型 || Object || Array || RegExp
    Object
    Array
    RegExp

第三天==>
    练习---------------查找元素并添加到新数组 || 求平均值 || 求最大值
    数组方法------------forEach、find、findIndex、some、every、filter、map
    字符串方法----------valueOf、trim、split、toUpperCase、indexOf、lastIndexOf、
            -----------slice、substring、substr、replace
            
    构造函数------------Number、String、Boolean
    了解面向对象编程的一般特征------------封装 | 继承 | 多态
    构造函数------------掌握基于构造函数原型对象的逻辑封装
    原型继承------------基于构造函数原型对象实现面向对象的继承特性
    继承----------------把实例对象赋值给原型对象，指回构造函数本身
    原型链--------------理解什么是原型链及其作用
    异常处理------------能够处理程序异常提升程序执行的健壮性 || try...catch
    面向对象------------OOP编程 || 面向对象编程的实现是以构造函数和原型对象为核心

第四天==>
    能够区分不同场景下函数中this 的默认值--------------默认值、普通函数、箭头函数
    动态指定函数中this的指向--------------------------call、bind、apply
    封装、实例成员、静态成员、构造函数、继承、super
    了解基于类的面向对象的实现语法
    代码内容:
        this指向(call/apply/bind)、类中添加成员、构造函数、类的继承、继承、类的本质、拷贝